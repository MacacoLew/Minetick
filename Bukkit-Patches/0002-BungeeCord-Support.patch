From c08005ccf7be249d2f931bfa37ebd06022211ec3 Mon Sep 17 00:00:00 2001
From: Poweruser <poweruser.rs@hotmail.com>
Date: Tue, 24 Mar 2015 11:50:54 +0100
Subject: [PATCH] BungeeCord Support


diff --git a/src/main/java/org/bukkit/entity/Player.java b/src/main/java/org/bukkit/entity/Player.java
index 6b955e4..e664676 100644
--- a/src/main/java/org/bukkit/entity/Player.java
+++ b/src/main/java/org/bukkit/entity/Player.java
@@ -98,6 +98,16 @@ public interface Player extends HumanEntity, Conversable, CommandSender, Offline
      */
     public InetSocketAddress getAddress();
 
+    // MinetickMod start
+    /**
+     * Gets the connection address of this player, regardless of whether it
+     * has been spoofed or not.
+     *
+     * @return the player's connection address
+     */
+    public InetSocketAddress getRawAddress();
+    // MinetickMod end
+
     /**
      * Sends this sender a message raw
      *
diff --git a/src/main/java/org/bukkit/event/player/PlayerLoginEvent.java b/src/main/java/org/bukkit/event/player/PlayerLoginEvent.java
index 68834dd..6e74da0 100644
--- a/src/main/java/org/bukkit/event/player/PlayerLoginEvent.java
+++ b/src/main/java/org/bukkit/event/player/PlayerLoginEvent.java
@@ -14,6 +14,7 @@ public class PlayerLoginEvent extends PlayerEvent {
     private final String hostname;
     private Result result = Result.ALLOWED;
     private String message = "";
+    private final InetAddress realAddress; // MinetickMod
 
     /**
      * @deprecated Address should be provided in other constructor
@@ -43,10 +44,17 @@ public class PlayerLoginEvent extends PlayerEvent {
      * @param address The address the player used to connect, provided for
      *     timing issues
      */
-    public PlayerLoginEvent(final Player player, final String hostname, final InetAddress address) {
+    public PlayerLoginEvent(final Player player, final String hostname, final InetAddress address, final InetAddress realAddress) { // MinetickMod
         super(player);
         this.hostname = hostname;
         this.address = address;
+        // MinetickMod start
+        this.realAddress = realAddress;
+    }
+
+    public PlayerLoginEvent(final Player player, final String hostname, final InetAddress address) {
+        this(player, hostname, address, address);
+        // MinetickMod end
     }
 
     /**
@@ -58,7 +66,7 @@ public class PlayerLoginEvent extends PlayerEvent {
      */
     @Deprecated
     public PlayerLoginEvent(final Player player, final Result result, final String message) {
-        this(player, "", null, result, message);
+        this(player, "", null, result, message, null); // MinetickMod
     }
 
     /**
@@ -71,8 +79,8 @@ public class PlayerLoginEvent extends PlayerEvent {
      * @param result The result status for this event
      * @param message The message to be displayed if result denies login
      */
-    public PlayerLoginEvent(final Player player, String hostname, final InetAddress address, final Result result, final String message) {
-        this(player, hostname, address);
+    public PlayerLoginEvent(final Player player, String hostname, final InetAddress address, final Result result, final String message, final InetAddress realAddress) { // MinetickMod
+        this(player, hostname, address, realAddress); // MinetickMod
         this.result = result;
         this.message = message;
     }
@@ -155,6 +163,17 @@ public class PlayerLoginEvent extends PlayerEvent {
         return address;
     }
 
+    // MinetickMod start
+    /**
+     * Gets the connection address of this player, regardless of whether it has been spoofed or not.
+     *
+     * @return the player's connection address
+     */
+    public InetAddress getRealAddress() {
+        return realAddress;
+    }
+    // MinetickMod end
+
     @Override
     public HandlerList getHandlers() {
         return handlers;
-- 
1.8.3.msysgit.0

