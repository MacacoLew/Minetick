From 10cc3c619dce5f92cb486b8c787ca9ff009e71a6 Mon Sep 17 00:00:00 2001
From: Poweruser <poweruser.rs@hotmail.com>
Date: Tue, 24 Mar 2015 11:26:12 +0100
Subject: [PATCH] Fire PreLogin Events in Offline Mode


diff --git a/src/main/java/net/minecraft/server/LoginListener.java b/src/main/java/net/minecraft/server/LoginListener.java
index 50beec2..b1f638b 100644
--- a/src/main/java/net/minecraft/server/LoginListener.java
+++ b/src/main/java/net/minecraft/server/LoginListener.java
@@ -80,10 +80,23 @@ public class LoginListener implements PacketLoginInListener, IUpdatePlayerListBo
 
     }
 
+    // MinetickMod start
+    public void initUUID()
+    {
+        UUID uuid = UUID.nameUUIDFromBytes( ( "OfflinePlayer:" + this.i.getName() ).getBytes( Charsets.UTF_8 ) );
+
+        this.i = new GameProfile( uuid, this.i.getName() );
+    }
+    // MinetickMod end
+
     public void b() {
+        // MinetickMod start - Moved to initUUID
+        /*
         if (!this.i.isComplete()) {
             this.i = this.a(this.i);
         }
+        */
+        // MinetickMod end
 
         // CraftBukkit start - fire PlayerLoginEvent
         EntityPlayer s = this.server.getPlayerList().attemptLogin(this, this.i, hostname);
@@ -133,7 +146,15 @@ public class LoginListener implements PacketLoginInListener, IUpdatePlayerListBo
             this.g = LoginListener.EnumProtocolState.KEY;
             this.networkManager.handle(new PacketLoginOutEncryptionBegin(this.j, this.server.P().getPublic(), this.e));
         } else {
-            this.g = LoginListener.EnumProtocolState.READY_TO_ACCEPT;
+            // MinetickMod start
+            try {
+                initUUID();
+                new LoginHandler().fireEvents();
+            } catch (Exception ex) {
+                disconnect("Failed to verify username!");
+                server.server.getLogger().log(java.util.logging.Level.WARNING, "Exception verifying " + i.getName(), ex);
+            }
+            // MinetickMod end
         }
 
     }
@@ -162,6 +183,40 @@ public class LoginListener implements PacketLoginInListener, IUpdatePlayerListBo
                                 return;
                             }
 
+                            new LoginHandler().fireEvents();
+                        } else if (LoginListener.this.server.S()) {
+                            LoginListener.c.warn("Failed to verify username but will let them in anyway!");
+                            LoginListener.this.i = LoginListener.this.a(gameprofile);
+                            LoginListener.this.g = LoginListener.EnumProtocolState.READY_TO_ACCEPT;
+                        } else {
+                            LoginListener.this.disconnect("Failed to verify username!");
+                            LoginListener.c.error("Username \'" + gameprofile.getName() + "\' tried to join with an invalid session"); // CraftBukkit - fix null pointer
+                        }
+                    } catch (AuthenticationUnavailableException authenticationunavailableexception) {
+                        if (LoginListener.this.server.S()) {
+                            LoginListener.c.warn("Authentication servers are down but will let them in anyway!");
+                            LoginListener.this.i = LoginListener.this.a(gameprofile);
+                            LoginListener.this.g = LoginListener.EnumProtocolState.READY_TO_ACCEPT;
+                        } else {
+                            LoginListener.this.disconnect("Authentication servers are down. Please try again later, sorry!");
+                            LoginListener.c.error("Couldn\'t verify username because servers are unavailable");
+                        }
+                        // CraftBukkit start - catch all exceptions
+                    } catch (Exception exception) {
+                        disconnect("Failed to verify username!");
+                        server.server.getLogger().log(java.util.logging.Level.WARNING, "Exception verifying " + gameprofile.getName(), exception);
+                        // CraftBukkit end
+                    }
+
+                }
+            }).start();
+        }
+    }
+
+    // MinetickMod start
+    public class LoginHandler {
+
+        public void fireEvents() throws Exception {
                             String playerName = i.getName();
                             java.net.InetAddress address = ((java.net.InetSocketAddress) networkManager.getSocketAddress()).getAddress();
                             java.util.UUID uniqueId = i.getId();
@@ -196,34 +251,9 @@ public class LoginListener implements PacketLoginInListener, IUpdatePlayerListBo
                             // CraftBukkit end
                             LoginListener.c.info("UUID of player " + LoginListener.this.i.getName() + " is " + LoginListener.this.i.getId());
                             LoginListener.this.g = LoginListener.EnumProtocolState.READY_TO_ACCEPT;
-                        } else if (LoginListener.this.server.S()) {
-                            LoginListener.c.warn("Failed to verify username but will let them in anyway!");
-                            LoginListener.this.i = LoginListener.this.a(gameprofile);
-                            LoginListener.this.g = LoginListener.EnumProtocolState.READY_TO_ACCEPT;
-                        } else {
-                            LoginListener.this.disconnect("Failed to verify username!");
-                            LoginListener.c.error("Username \'" + gameprofile.getName() + "\' tried to join with an invalid session"); // CraftBukkit - fix null pointer
-                        }
-                    } catch (AuthenticationUnavailableException authenticationunavailableexception) {
-                        if (LoginListener.this.server.S()) {
-                            LoginListener.c.warn("Authentication servers are down but will let them in anyway!");
-                            LoginListener.this.i = LoginListener.this.a(gameprofile);
-                            LoginListener.this.g = LoginListener.EnumProtocolState.READY_TO_ACCEPT;
-                        } else {
-                            LoginListener.this.disconnect("Authentication servers are down. Please try again later, sorry!");
-                            LoginListener.c.error("Couldn\'t verify username because servers are unavailable");
-                        }
-                        // CraftBukkit start - catch all exceptions
-                    } catch (Exception exception) {
-                        disconnect("Failed to verify username!");
-                        server.server.getLogger().log(java.util.logging.Level.WARNING, "Exception verifying " + gameprofile.getName(), exception);
-                        // CraftBukkit end
-                    }
-
-                }
-            }).start();
         }
     }
+    // MinetickMod end
 
     protected GameProfile a(GameProfile gameprofile) {
         UUID uuid = UUID.nameUUIDFromBytes(("OfflinePlayer:" + gameprofile.getName()).getBytes(Charsets.UTF_8));
-- 
1.8.3.msysgit.0

